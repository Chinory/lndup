#!/usr/bin/env node
/*lndup v0.2 GPL-3.0 <https://github.com/chinory/lndup>*/
const fs=require("fs"),crypto=require("crypto");if("--hasher"===process.argv[2])function main(){var e=Buffer.allocUnsafe(16777216),t=Buffer.alloc(20);require("readline").createInterface({input:process.stdin}).on("line",r=>{0===r.length&&process.exit();try{var o=fs.openSync(r,"r");let n=fs.fstatSync(o).size;const i=crypto.createHash("sha1");for(;n>16777216;)fs.readSync(o,e,0,16777216,null),i.update(e),n-=16777216;fs.readSync(o,e,0,n,null);var s=i.update(e.slice(0,n)).digest()}catch(e){process.stdout.write(t),process.stderr.write(e.toString())}if(o){try{fs.closeSync(o)}catch(e){}s&&process.stdout.write(s)}})}else{const e=require("path"),t=require("child_process");function hasher(e,r){var o=[],s=[],n=r;function i(){const r=[],n=t.spawn(process.argv0,[process.argv[1],"--hasher"],{windowsHide:!0});n.stdout.on("readable",()=>{for(var t;null!==(t=n.stdout.read(20));)e(t,r.shift())}),n.stderr.on("data",rua),o.push(n),s.push(r)}do{i()}while(--n>0);return[function(e,t){s[n].push(t),o[n].stdin.write(e),o[n].stdin.write("\n"),++n===r&&(n=0)},function(){for(const e of o)e.stdin.write("\n");o=void 0,s=void 0,n=void 0}]}function rua(e){console.error("#%s",e)}function link(e,t){const r=t+"."+crypto.randomBytes(8).toString("hex");fs.renameSync(t,r);try{fs.linkSync(e,t)}catch(e){try{fs.renameSync(r,t)}catch(e){console.error("mv -f -- '%s' '%s' #%s",r,t,e)}throw e}try{fs.unlinkSync(r)}catch(e){console.error("rm -f -- '%s' #%s",r,e)}}Map.prototype.getd_array=function(e){let t=this.get(e);return void 0===t&&(t=[],this.set(e,t)),t},Map.prototype.getd_map=function(e){let t=this.get(e);return void 0===t&&(t=new Map,this.set(e,t)),t};const r=["B","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"];function szstr(e){for(var t=0;t<8&&e>=1024;++t)e/=1024;return e.toFixed(t)+r[t]}function printt(){const e=[];for(const t of arguments)for(const r in t)t[r]=t[r].toString(),(void 0===e[r]||t[r].length>e[r])&&(e[r]=t[r].length);for(const t of arguments){for(const r in t)t[r]=t[r].padStart(e[r]);console.log(t.join("  "))}}function probe(t){return new Promise(r=>{var o=0;console.time("#Profile: Time: scheme"),console.time("#Profile: Time: 1-probe");var s=new Map,n=0,i=0,c=0,f=0,a=0,l=0;function u(){return printt(["#Stat: 1-probe: Readdir:",a,szstr(l)],["#Stat: 1-probe: Stat:   ",c,szstr(f)],["#Stat: 1-probe: Select: ",n,szstr(i)]),r(s)}function d(t){return++o,++a,fs.readdir(t,(r,s)=>{if(--o,r)rua(r);else for(let r of s)r=e.join(t,r),l+=r.length,p(r);if(0===o)return u()})}function p(e){return++o,++c,fs.lstat(e,(t,r)=>{if(--o,t)rua(t);else{if(r.isDirectory())return d(e);r.isFile()&&(f+=r.size,r.size>0&&(s.getd_map(r.dev).getd_map(r.size).getd_map("").getd_array(r.ino).push(e),++n,i+=r.size))}if(0===o)return u()})}for(const e of t)p(e)})}const o=require("os").cpus().length;function verify(e){return new Promise(t=>{var r=0;console.timeEnd("#Profile: Time: 1-probe"),console.time("#Profile: Time: 2-verify");var s=8192,n=0,i=0,c=0,f=0,a=0,l=0;function u(){const r=c+a,o=f+l,s=f/c,u=l/a;return printt(["#Stat: 2-verify: Hash-Int:",szstr(f),`${o>0?(100*f/o).toFixed(2):"0.00"}%`,c,`${r>0?(100*c/r).toFixed(2):"0.00"}%`,isNaN(s)?"NaN":szstr(s),"1.00x"],["#Stat: 2-verify: Hash-Ext:",szstr(l),`${o>0?(100*l/o).toFixed(2):"0.00"}%`,a,`${r>0?(100*a/r).toFixed(2):"0.00"}%`,isNaN(u)?"NaN":szstr(u),(u/s).toFixed(2)+"x"]),console.log("#Stat: 2-verify: SMALL_FILE: avg: "+szstr(n/i)),p(),t(e)}var d,p,h=Buffer.allocUnsafe(8192),y=Buffer.alloc(20);[d,p]=hasher(function(e,t){--r,e.equals(y)||t[0].getd_map(e.toString("binary")).set(t[1],t[2]);if(0===r)return u()},o);var m=0,v=0,g=0;for(const[t,o]of e)for(const[e,t]of o){const o=t.get("");if(void 0!==o){if(o.size>1)for(const[u,p]of o){if(8===g&&(g=4,m>>=1,v>>=1),e>s)++r,++a,l+=e,++g,v+=e,d(p[0],[t,u,p]);else{let r;++c,f+=e,++g,m+=e;try{r=fs.openSync(p[0],"r");const o=crypto.createHash("sha1");fs.readSync(r,h,0,e,null),t.getd_map(o.update(h.slice(0,e)).digest("binary")).set(u,p)}catch(e){rua(e)}if(r)try{fs.closeSync(r)}catch(e){rua(e)}}++i,n+=s,s=Math.floor(8192*v/(m+v))}t.delete("")}}if(0===r)return u()})}function solve(e){console.timeEnd("#Profile: Time: 2-verify"),console.time("#Profile: Time: 3-solve");const t=[];for(const[r,o]of e)for(const[e,r]of o)for(const[o,s]of r)if(s.size>1){let r=0,o=0;for(const[e,t]of s)t.length>o&&(o=t.length,r=e);const n=[];for(const[e,t]of s)e!==r&&n.push(...t);t.push([e,s.get(r)[0],n])}return t}function execute(e){console.timeEnd("#Profile: Time: 3-solve"),console.timeEnd("#Profile: Time: scheme"),console.time("#Profile: Time: execute");var t=0,r=0,o=0,s=0,n=0,i=0,c=0,f=0,a=0;for(const[l,u,d]of e){let e=0,p=0;for(const r of d){try{link(u,r),s+=l,e=1,i+=1}catch(e){console.error("ln -f -- '%s' '%s' #%s",u,r,e),c+=l,p=1,a+=1}t+=l,o+=1}r+=1,n+=e,f+=p}console.timeEnd("#Profile: Time: execute");{const e=process.memoryUsage();console.log(`#Profile: Memory: rss: ${szstr(e.rss)}`),console.log(`#Profile: Memory: heapTotal: ${szstr(e.heapTotal)}`),console.log(`#Profile: Memory: heapUsed: ${szstr(e.heapUsed)}`),console.log(`#Profile: Memory: external: ${szstr(e.external)}`)}printt(["#Result: TODO:",szstr(t),t,r,o],["#Result: DONE:",szstr(s),s,n,i],["#Result: FAIL:",szstr(c),c,f,a])}function main(){probe(process.argv.slice(2)).then(verify).then(solve).then(execute)}}main();